{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedeReducer } from './reducers/productReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducer';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers';\nimport { cartReducer } from './reducers/cartReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedeReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetail: userDetailReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  orderDeliver: orderDeliverReducer\n});\nconst cartItemsFormStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFormStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfor')) : null;\nconst shippingAddressFormStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFormStorage,\n    shippingAddress: shippingAddressFormStorage\n  },\n  userLogin: {\n    userInfo: userInfoFormStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/OcheEmmy/Desktop/microverse-projects/tro-nic-shop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","productTopRatedeReducer","userLoginReducer","userRegisterReducer","userDetailReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","orderDeliverReducer","cartReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","productReviewCreate","productTopRated","cart","userLogin","userRegister","userDetail","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderListMy","orderList","orderDeliver","cartItemsFormStorage","localStorage","getItem","JSON","parse","userInfoFormStorage","shippingAddressFormStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SACIC,kBADJ,EAEIC,oBAFJ,EAGIC,oBAHJ,EAIIC,oBAJJ,EAKIC,oBALJ,EAMIC,0BANJ,EAOIC,uBAPJ,QAQO,4BARP;AASA,SAAQC,gBAAR,EACIC,mBADJ,EAEIC,iBAFJ,EAGIC,wBAHJ,EAIIC,eAJJ,EAKIC,iBALJ,EAMIC,iBANJ,QAQK,wBARL;AAUA,SACIC,kBADJ,EAEIC,mBAFJ,EAGIC,eAHJ,EAIIC,kBAJJ,EAKIC,gBALJ,EAMIC,mBANJ,QAOO,0BAPP;AASA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,MAAMC,OAAO,GAAGzB,eAAe,CAAC;AAC5B0B,EAAAA,WAAW,EAAEtB,kBADe;AAE5BuB,EAAAA,cAAc,EAAEtB,oBAFY;AAG5BuB,EAAAA,aAAa,EAAEtB,oBAHa;AAI5BuB,EAAAA,aAAa,EAAEtB,oBAJa;AAK5BuB,EAAAA,aAAa,EAAEtB,oBALa;AAM5BuB,EAAAA,mBAAmB,EAAEtB,0BANO;AAO5BuB,EAAAA,eAAe,EAAEtB,uBAPW;AAQ5BuB,EAAAA,IAAI,EAAET,WARsB;AAS5BU,EAAAA,SAAS,EAAEvB,gBATiB;AAU5BwB,EAAAA,YAAY,EAAEvB,mBAVc;AAW5BwB,EAAAA,UAAU,EAAEvB,iBAXgB;AAY5BwB,EAAAA,iBAAiB,EAAEvB,wBAZS;AAa5BwB,EAAAA,QAAQ,EAAEvB,eAbkB;AAc5BwB,EAAAA,UAAU,EAAEvB,iBAdgB;AAe5BwB,EAAAA,UAAU,EAAEvB,iBAfgB;AAgB5BwB,EAAAA,WAAW,EAAEvB,kBAhBe;AAiB5BwB,EAAAA,YAAY,EAAEvB,mBAjBc;AAkB5BwB,EAAAA,QAAQ,EAAEvB,eAlBkB;AAmB5BwB,EAAAA,WAAW,EAAEvB,kBAnBe;AAoB5BwB,EAAAA,SAAS,EAAEvB,gBApBiB;AAqB5BwB,EAAAA,YAAY,EAAEvB;AArBc,CAAD,CAA/B;AAwBA,MAAMwB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAAjH;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAnC,GAAmF,IAA/G;AAEA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAA0CC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAA1C,GAAgG,EAAnI;AAGA,MAAMK,YAAY,GAAG;AACjBrB,EAAAA,IAAI,EAAE;AAACsB,IAAAA,SAAS,EAAER,oBAAZ;AACNS,IAAAA,eAAe,EAAEH;AADX,GADW;AAKjBnB,EAAAA,SAAS,EAAE;AAACuB,IAAAA,QAAQ,EAAEL;AAAX;AALM,CAArB;AAQA,MAAMM,UAAU,GAAG,CAACxD,KAAD,CAAnB;AAEA,MAAMyD,KAAK,GAAG5D,WAAW,CAAC0B,OAAD,EAAU6B,YAAV,EAAwBnD,mBAAmB,CAAEF,eAAe,CAAC,GAAGyD,UAAJ,CAAjB,CAA3C,CAAzB;AAIA,eAAeC,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport { \r\n    productListReducer,\r\n    productDetailReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedeReducer,\r\n} from './reducers/productReducers';\r\nimport {userLoginReducer, \r\n    userRegisterReducer,\r\n    userDetailReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer\r\n}\r\nfrom './reducers/userReducer';\r\n\r\nimport {\r\n    orderCreateReducer, \r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers';\r\n\r\nimport { cartReducer } from './reducers/cartReducers';\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedeReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetail: userDetailReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\nconst cartItemsFormStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\n\r\nconst userInfoFormStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfor')) : null\r\n\r\nconst shippingAddressFormStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: {cartItems: cartItemsFormStorage, \r\n    shippingAddress: shippingAddressFormStorage,\r\n    },\r\n    \r\n    userLogin: {userInfo: userInfoFormStorage},\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools (applyMiddleware(...middleware)))\r\n\r\n\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}